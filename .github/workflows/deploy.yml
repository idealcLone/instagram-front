name: Frontend CI/CD

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: idealclone/instagram-frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.IMAGE_NAME }}:latest
          build-args: |
            BACKEND_URL=${{ secrets.BACKEND_URL }}
            NEXT_SHARP_PATH=${{ secrets.NEXT_SHARP_PATH }}

      - name: Create .env file
        run: |
          cat <<EOF > .env
          NEXT_PUBLIC_BACKEND_URL=${{ secrets.BACKEND_URL }}
          NEXT_SHARP_PATH=${{ secrets.NEXT_SHARP_PATH }}
          EOF

      - name: Upload .env to Droplet
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USER }}
          password: ${{ secrets.DROPLET_PASSWORD }}
          port: 22
          source: ".env"
          target: "/root/"

      - name: Deploy to DigitalOcean Droplet via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USER }}
          password: ${{ secrets.DROPLET_PASSWORD }}
          port: 22
          script: |
            docker pull ${{ env.IMAGE_NAME }}:latest
            docker stop instagram-frontend || true
            docker rm instagram-frontend || true
            docker run -d --name instagram-frontend -p 3000:3000 --env-file /root/.env ${{ env.IMAGE_NAME }}:latest
